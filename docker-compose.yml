version: '3.5'

services:

   developer:
      networks:
         - kafka
      entrypoint: /bin/bash
      command:  -c "sleep infinity"
      build:
         context: .
         dockerfile: Dockerfile
         args:
         - USERNAME=dev
         target: developer
      command:  -c "/Project/build/consumer" 
      environment:
         KAFKAURL: "redpanda:29092" 
         KAFKATOPIC: "test"

   # zookeeper:
   #    networks:
   #       - kafka
   #    image: wurstmeister/zookeeper
   #    ports:
   #       - "2181:2181"
            
   # kafka:
   #    networks:
   #       - kafka
   #    image: wurstmeister/kafka
   #    command: [start-kafka.sh]
   #    ports:
   #          - "9092:9092"
   #    environment:
   #          KAFKA_CREATE_TOPICS: "ingest_streaming_telemetry_tgr:1:1,vrfStats:1:1,test:1:1" # add new topics here appended with :1:1 for who knows why
   #          KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
   #          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
   #          KAFKA_ADVERTISED_PORT: 9092
   #          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
   #          KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
   #          KAFKA_LISTENERS: PLAINTEXT://:9092
   #          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
   redpanda:
    
      command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      # NOTE: Please use the latest version here!
      image: docker.vectorized.io/vectorized/redpanda:v21.4.13
      container_name: redpanda-1
      ports:
      - 9092:9092
      - 29092:29092
      networks:
         - kafka

networks:
   kafka:
      name: kafka

